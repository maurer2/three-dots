/**
 * ==============================================
 * Dot Spin
 * ==============================================
 */

// @use "sass:math";

// https://css-tricks.com/snippets/sass/power-function/
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

// https://www.antimath.info/css/sass-sqrt-function/
@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

$x1: $dot-spacing * 1.2;
$y1: $dot-spacing * 1.2;
$-x1: -$x1;
$-y1: -$y1;

// $x2: math.sqrt((math.pow($x1, 2) * .5));
// $y2: math.sqrt((math.pow($y1, 2) * .5));
$x2: sqrt((pow($x1, 2) * .5));
$y2: sqrt((pow($y1, 2) * .5));

$-x2: -$x2;
$-y2: -$y2;

$color-0: rgba($dot-color, 0);
$color-1: rgba($dot-color, 1);

.dot-spin {
  position: relative;

  @include dot($bg-color: transparent, $color: transparent);

  box-shadow:
    0 $-y1 0 0 $color-1,
    $x2 $-y2 0 0 $color-1,
    $x1 0 0 0 $color-1,
    $x2 $y2 0 0 $color-0,
    0 $y1 0 0 $color-0,
    $-x2 $y2 0 0 $color-0,
    $-x1 0 0 0 $color-0,
    $-x2 $-y2 0 0 $color-0;
  animation: dot-spin 1.5s infinite linear;
}

@keyframes dot-spin {
  0%,
  100% {
    box-shadow:
      0 $-y1 0 0 $color-1,
      $x2 $-y2 0 0 $color-1,
      $x1 0 0 0 $color-1,
      $x2 $y2 0 -5px $color-0,
      0 $y1 0 -5px $color-0,
      $-x2 $y2 0 -5px $color-0,
      $-x1 0 0 -5px $color-0,
      $-x2 $-y2 0 -5px $color-0;
  }

  12.5% {
    box-shadow:
      0 $-y1 0 -5px $color-0,
      $x2 $-y2 0 0 $color-1,
      $x1 0 0 0 $color-1,
      $x2 $y2 0 0 $color-1,
      0 $y1 0 -5px $color-0,
      $-x2 $y2 0 -5px $color-0,
      $-x1 0 0 -5px $color-0,
      $-x2 $-y2 0 -5px $color-0;
  }

  25% {
    box-shadow:
      0 $-y1 0 -5px $color-0,
      $x2 $-y2 0 -5px $color-0,
      $x1 0 0 0 $color-1,
      $x2 $y2 0 0 $color-1,
      0 $y1 0 0 $color-1,
      $-x2 $y2 0 -5px $color-0,
      $-x1 0 0 -5px $color-0,
      $-x2 $-y2 0 -5px $color-0;
  }

  37.5% {
    box-shadow:
      0 $-y1 0 -5px $color-0,
      $x2 $-y2 0 -5px $color-0,
      $x1 0 0 -5px $color-0,
      $x2 $y2 0 0 $color-1,
      0 $y1 0 0 $color-1,
      $-x2 $y2 0 0 $color-1,
      $-x1 0 0 -5px $color-0,
      $-x2 $-y2 0 -5px $color-0;
  }

  50% {
    box-shadow:
      0 $-y1 0 -5px $color-0,
      $x2 $-y2 0 -5px $color-0,
      $x1 0 0 -5px $color-0,
      $x2 $y2 0 -5px $color-0,
      0 $y1 0 0 $color-1,
      $-x2 $y2 0 0 $color-1,
      $-x1 0 0 0 $color-1,
      $-x2 $-y2 0 -5px $color-0;
  }

  62.5% {
    box-shadow:
      0 $-y1 0 -5px $color-0,
      $x2 $-y2 0 -5px $color-0,
      $x1 0 0 -5px $color-0,
      $x2 $y2 0 -5px $color-0,
      0 $y1 0 -5px $color-0,
      $-x2 $y2 0 0 $color-1,
      $-x1 0 0 0 $color-1,
      $-x2 $-y2 0 0 $color-1;
  }

  75% {
    box-shadow:
      0 $-y1 0 0 $color-1,
      $x2 $-y2 0 -5px $color-0,
      $x1 0 0 -5px $color-0,
      $x2 $y2 0 -5px $color-0,
      0 $y1 0 -5px $color-0,
      $-x2 $y2 0 -5px $color-0,
      $-x1 0 0 0 $color-1,
      $-x2 $-y2 0 0 $color-1;
  }

  87.5% {
    box-shadow:
      0 $-y1 0 0 $color-1,
      $x2 $-y2 0 0 $color-1,
      $x1 0 0 -5px $color-0,
      $x2 $y2 0 -5px $color-0,
      0 $y1 0 -5px $color-0,
      $-x2 $y2 0 -5px $color-0,
      $-x1 0 0 -5px $color-0,
      $-x2 $-y2 0 0 $color-1;
  }
}
